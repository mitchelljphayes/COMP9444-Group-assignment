CS230
hand. Track the steering angle using a sensor in the car. Note that the
most challenging to train seems to be the path planner. You collect images
of roads with and without cars and pedestrians. Each image should be
labelled with bounding boxes around cars and pedestrians, and indicate
the true steering angle.
You can thus set-up a camera on the hood of your car and a sensor
capturing the steering angle. Drive it in various environment, track the
live variations in steering angle mapped to the camera's video stream.
Finally, label the video frames with bounding boxes around pedestrians
and cars.
To boost the performance of your car detector and pedestrian detector,
you can also add images from other sources such as PASCAL VOC and
COCO which have bounding box labels.
(d)(2 points) Propose a metric to measure the performance of your pipeline model.
Solution:
•Sum of absolute deviations (i.e. L1 distance) between ground truth and pre-
dicted steering angle.
•Sum of squared errors (i.e. L2 distance) between ground truth and predicted
steering angle.
•(not expected) You can also design metrics for submodules. For CandPit
might be mAP (/mean IoU)
(e) Assume that you have designed a metric that scores your pipeline between 0% (bad)
and 100% (good.) On unseen data from the real world, your entire pipeline gets a score
of 54%.
(i)(2 points) Dene Bayes error and human level error. How do these two compare
with each other? ( ,, =)
Solution: Bayes error is a lower bound on the minimum error that can be
achieved. Human level error is the error achieved by an expert human on the
same task. The Bayes error is human level error.
(ii)(2 points) How would you measure human level error for your autonomous driv-
ing task?
Solution: Possible solution: Create a simulator with the same path followed
by the car while recording data, and have an expert try following the path.
14